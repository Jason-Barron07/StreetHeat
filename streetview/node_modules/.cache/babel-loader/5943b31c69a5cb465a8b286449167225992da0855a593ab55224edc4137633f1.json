{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-477de2e3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container justify-content-center align-items-center\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"card mt-5\",\n  style: {\n    \"width\": \"18rem\"\n  }\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = {\n  class: \"card-text\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"btn text-white p-3\"\n}, \"View\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  key: 1,\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SpinnerCompVue = _resolveComponent(\"SpinnerCompVue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$options.products ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: product.prodID,\n      class: \"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      src: product.prodUrl,\n      class: \"card-img-top\",\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, _toDisplayString(product.prodName), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, \"R\" + _toDisplayString(product.prodPrice), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(product.prodBrand), 1 /* TEXT */), _createElementVNode(\"div\", {\n      onClick: $event => $options.addToCart(product),\n      class: \"btn text-white\"\n    }, \"Add to Cart\", 8 /* PROPS */, _hoisted_9), _hoisted_10])])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_SpinnerCompVue)])), _createCommentVNode(\" \\r\\n        <div>\\r\\n          <h1>Shopping Cart</h1>\\r\\n          <div v-for=\\\"(product, index) in products\\\" :key=\\\"index\\\">\\r\\n            <p>{{ product.prodName }} - ${{ product.price }}</p>\\r\\n            <button @click=\\\"addToCart(product)\\\">Add to Cart</button>\\r\\n          </div>\\r\\n          <h2>Cart</h2>\\r\\n          <ul>\\r\\n            <li v-for=\\\"(item, index) in cart\\\" :key=\\\"index\\\">\\r\\n              {{ item.name }} - ${{ item.price }}\\r\\n            </li>\\r\\n          </ul>\\r\\n          <button @click=\\\"checkout\\\">Checkout</button>\\r\\n        </div> \")]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","$options","products","_hoisted_2","_Fragment","_renderList","product","key","prodID","_hoisted_3","src","prodUrl","alt","_hoisted_5","_hoisted_6","_toDisplayString","prodName","_hoisted_7","prodPrice","_hoisted_8","prodBrand","onClick","$event","addToCart","_hoisted_9","_hoisted_10","_hoisted_11","_createVNode","_component_SpinnerCompVue","_createCommentVNode"],"sources":["C:\\Users\\Student\\Documents\\Capstone\\StreetHeat\\streetview\\src\\views\\ProductsView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container justify-content-center align-items-center\">\r\n      <div class=\"row\" v-if=\"products\">\r\n        <div v-for=\"product in products\" :key=\"product.prodID\" class=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\" >\r\n          <div class=\"card mt-5\" style=\"width: 18rem;\" >\r\n              <img :src=\"product.prodUrl\" class=\"card-img-top\" alt=\"\">\r\n              <div class=\"card-body\">\r\n                <p class=\"card-text\">{{product.prodName}}</p>\r\n                <p class=\"card-text\">R{{product.prodPrice}}</p>\r\n                <p class=\"card-text\">{{product.prodBrand}}</p>\r\n                <div @click=\"addToCart(product)\" class=\"btn text-white \">Add to Cart</div>\r\n                <div class=\"btn text-white p-3\">View</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-else class=\"row\">\r\n          <SpinnerCompVue/>\r\n        </div>\r\n<!-- \r\n        <div>\r\n          <h1>Shopping Cart</h1>\r\n          <div v-for=\"(product, index) in products\" :key=\"index\">\r\n            <p>{{ product.prodName }} - ${{ product.price }}</p>\r\n            <button @click=\"addToCart(product)\">Add to Cart</button>\r\n          </div>\r\n          <h2>Cart</h2>\r\n          <ul>\r\n            <li v-for=\"(item, index) in cart\" :key=\"index\">\r\n              {{ item.name }} - ${{ item.price }}\r\n            </li>\r\n          </ul>\r\n          <button @click=\"checkout\">Checkout</button>\r\n        </div> -->\r\n      </div>\r\n</template>\r\n\r\n<script>\r\nimport SpinnerCompVue from '../components/SpinnerComp.vue'\r\n  \r\n\r\n  export default {\r\n\r\n    data() {\r\n    return {\r\n    product: [\r\n       this.$store.dispatch('fetchProducts')\r\n      ],\r\n      cart: [],\r\n    };\r\n  },\r\n\r\n        computed:{\r\n            products(){\r\n                return this.$store.state.products\r\n            }\r\n        },\r\n        mounted(){\r\n            this.$store.dispatch('fetchProducts')\r\n        },\r\n        components:{\r\n            SpinnerCompVue\r\n        },\r\n\r\n        methods:{\r\n          addToCart(product) {\r\n      this.cart.push(product);\r\n    },\r\n    checkout() {\r\n      // Send cart data to your Node.js server for database insertion\r\n      // You would make an HTTP POST request here\r\n      return this.$store.state.products\r\n    },\r\n  },\r\n  }\r\n          \r\n    \r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .container{\r\n        display:flex\r\n    }\r\n\r\n    .btn{\r\n      background-color:#620A15;\r\n      margin-left:30px;\r\n    }\r\n\r\n    .card-text{\r\n      font-size: 30px;\r\n    }\r\n\r\n    .card:hover{\r\n      transform: scale(1.1); \r\n      cursor: pointer; \r\n      transition: transform 0.3s ease;\r\n    }\r\n\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAqD;;;EACzDA,KAAK,EAAC;;;EAEFA,KAAK,EAAC,WAAW;EAACC,KAAqB,EAArB;IAAA;EAAA;;;;EAEdD,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;iEAEpBE,mBAAA,CAA0C;EAArCF,KAAK,EAAC;AAAoB,GAAC,MAAI;;;EAKhCA,KAAK,EAAC;;;;uBAftBG,mBAAA,CAiCQ,OAjCRC,UAiCQ,GAhCiBC,QAAA,CAAAC,QAAQ,I,cAA/BH,mBAAA,CAaQ,OAbRI,UAaQ,I,kBAZNJ,mBAAA,CAWQK,SAAA,QAAAC,WAAA,CAXeJ,QAAA,CAAAC,QAAQ,EAAnBI,OAAO;yBAAnBP,mBAAA,CAWQ;MAX0BQ,GAAG,EAAED,OAAO,CAACE,MAAM;MAAEZ,KAAK,EAAC;QAC3DE,mBAAA,CASQ,OATRW,UASQ,GARJX,mBAAA,CAAwD;MAAlDY,GAAG,EAAEJ,OAAO,CAACK,OAAO;MAAEf,KAAK,EAAC,cAAc;MAACgB,GAAG,EAAC;yCACrDd,mBAAA,CAMM,OANNe,UAMM,GALJf,mBAAA,CAA6C,KAA7CgB,UAA6C,EAAAC,gBAAA,CAAtBT,OAAO,CAACU,QAAQ,kBACvClB,mBAAA,CAA+C,KAA/CmB,UAA+C,EAA1B,GAAC,GAAAF,gBAAA,CAAET,OAAO,CAACY,SAAS,kBACzCpB,mBAAA,CAA8C,KAA9CqB,UAA8C,EAAAJ,gBAAA,CAAvBT,OAAO,CAACc,SAAS,kBACxCtB,mBAAA,CAA0E;MAApEuB,OAAK,EAAAC,MAAA,IAAErB,QAAA,CAAAsB,SAAS,CAACjB,OAAO;MAAGV,KAAK,EAAC;OAAkB,aAAW,iBAAA4B,UAAA,GACpEC,WAA0C,C;qDAKlD1B,mBAAA,CAEM,OAFN2B,WAEM,GADJC,YAAA,CAAiBC,yBAAA,E,IAE3BC,mBAAA,gkBAckB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}