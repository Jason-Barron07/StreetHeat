{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SpinnerCompVue from '../components/SpinnerComp.vue';\nexport default {\n  data() {\n    return {\n      product: [this.$store.dispatch('fetchProducts')],\n      cart: []\n    };\n  },\n  computed: {\n    products() {\n      return this.$store.state.products;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchProducts');\n  },\n  components: {\n    SpinnerCompVue\n  },\n  methods: {\n    addToCart(product) {\n      this.cart.push(product);\n    },\n    checkout() {\n      // Send cart data to your Node.js server for database insertion\n      // You would make an HTTP POST request here\n      return this.$store.state.products;\n    }\n  }\n};","map":{"version":3,"names":["SpinnerCompVue","data","product","$store","dispatch","cart","computed","products","state","mounted","components","methods","addToCart","push","checkout"],"sources":["C:\\Users\\Student\\Documents\\Capstone\\StreetHeat\\streetview\\src\\views\\ProductsView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container justify-content-center align-items-center\">\r\n      <div class=\"row\" v-if=\"products\">\r\n        <div v-for=\"product in products\" :key=\"product.prodID\" class=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\" >\r\n          <div class=\"card mt-5\" style=\"width: 18rem;\" >\r\n              <img :src=\"product.prodUrl\" class=\"card-img-top\" alt=\"\">\r\n              <div class=\"card-body\">\r\n                <p class=\"card-text\">{{product.prodName}}</p>\r\n                <p class=\"card-text\">R{{product.prodPrice}}</p>\r\n                <p class=\"card-text\">{{product.prodBrand}}</p>\r\n                <div class=\"btn text-white\">Add to cart</div>\r\n                <div @click=\"addToCart(product)\" class=\"btn text-white \">Add to Cart</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-else class=\"row\">\r\n          <SpinnerCompVue/>\r\n        </div>\r\n<!-- \r\n        <div>\r\n          <h1>Shopping Cart</h1>\r\n          <div v-for=\"(product, index) in products\" :key=\"index\">\r\n            <p>{{ product.prodName }} - ${{ product.price }}</p>\r\n            <button @click=\"addToCart(product)\">Add to Cart</button>\r\n          </div>\r\n          <h2>Cart</h2>\r\n          <ul>\r\n            <li v-for=\"(item, index) in cart\" :key=\"index\">\r\n              {{ item.name }} - ${{ item.price }}\r\n            </li>\r\n          </ul>\r\n          <button @click=\"checkout\">Checkout</button>\r\n        </div> -->\r\n      </div>\r\n</template>\r\n\r\n<script>\r\nimport SpinnerCompVue from '../components/SpinnerComp.vue'\r\n  \r\n\r\n  export default {\r\n\r\n    data() {\r\n    return {\r\n    product: [\r\n       this.$store.dispatch('fetchProducts')\r\n      ],\r\n      cart: [],\r\n    };\r\n  },\r\n\r\n        computed:{\r\n            products(){\r\n                return this.$store.state.products\r\n            }\r\n        },\r\n        mounted(){\r\n            this.$store.dispatch('fetchProducts')\r\n        },\r\n        components:{\r\n            SpinnerCompVue\r\n        },\r\n\r\n        methods:{\r\n          addToCart(product) {\r\n      this.cart.push(product);\r\n    },\r\n    checkout() {\r\n      // Send cart data to your Node.js server for database insertion\r\n      // You would make an HTTP POST request here\r\n      return this.$store.state.products\r\n    },\r\n  },\r\n  }\r\n          \r\n    \r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .container{\r\n        display:flex\r\n    }\r\n\r\n    .btn{\r\n      background-color:#620A15;\r\n      gap:3;\r\n    }\r\n\r\n    .card-text{\r\n      font-size: 30px;\r\n    }\r\n\r\n    .card:hover{\r\n      transform: scale(1.1); \r\n      cursor: pointer; \r\n      transition: transform 0.3s ease;\r\n    }\r\n\r\n</style>"],"mappings":";AAsCA,OAAOA,cAAa,MAAO,+BAA8B;AAGvD,eAAe;EAEbC,IAAIA,CAAA,EAAG;IACP,OAAO;MACPC,OAAO,EAAE,CACN,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,eAAe,EACpC;MACDC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EAEKC,QAAQ,EAAC;IACLC,QAAQA,CAAA,EAAE;MACN,OAAO,IAAI,CAACJ,MAAM,CAACK,KAAK,CAACD,QAAO;IACpC;EACJ,CAAC;EACDE,OAAOA,CAAA,EAAE;IACL,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,eAAe;EACxC,CAAC;EACDM,UAAU,EAAC;IACPV;EACJ,CAAC;EAEDW,OAAO,EAAC;IACNC,SAASA,CAACV,OAAO,EAAE;MACvB,IAAI,CAACG,IAAI,CAACQ,IAAI,CAACX,OAAO,CAAC;IACzB,CAAC;IACDY,QAAQA,CAAA,EAAG;MACT;MACA;MACA,OAAO,IAAI,CAACX,MAAM,CAACK,KAAK,CAACD,QAAO;IAClC;EACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}